{"version":3,"file":"static/js/871.c6c58379.chunk.js","mappings":"wQAKe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKF,EAAQG,SAAS,KAAOC,OAAOJ,EAAQK,MAAM,EAAGL,EAAQM,SAAWN,GAE9EO,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGAEXX,GAAW,GAFA,UAGQY,EAAAA,EAAAA,IAAeP,GAHvB,OAGLQ,EAHK,OAIXf,EAAWe,EAAKC,SAJL,gDAMXZ,EAAS,EAAD,IANG,yBAQXF,GAAW,GARA,4EAAH,qDAWhBW,GACH,GAAE,CAACN,IAEJ,IAAMU,EAAQ,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAASmB,KAAI,YAA8B,IAA3BX,EAA0B,EAA1BA,GAAIY,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,OACI,2BACI,uBAAID,KACJ,uBAAIC,MAFCb,EAKhB,IAED,OACI,iBAAKc,MAAO,CAAEC,gBAAiB,eAA/B,UACKvB,IAAW,wBAAKkB,KACflB,EAAQY,SAAU,sCACnBV,IAAW,SAAC,IAAD,IACXE,IAAS,6CAGrB,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport Loader from 'shared/Loader/Loader';\nimport { getReviewsById } from '../../shared/api/gettingData'\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { movieId } = useParams();\n    const id = movieId.includes(':') ? Number(movieId.slice(1, movieId.length)) : movieId;\n\n    useEffect(() => {\n        const fetchCasts = async () => {\n            try {\n                setLoading(true);\n                const data = await getReviewsById(id)\n                setReviews(data.results)\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }\n        }\n        fetchCasts();\n    }, [id])\n\n    const elements = reviews?.map(({ id, author, content }) => {\n        return (\n            <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n            </li>\n        )\n    })\n\n    return (\n        <div style={{ backgroundColor: 'lightyellow' }}>\n            {reviews && <ul>{elements}</ul>}\n            {!reviews.length && <p>No reviews</p>}\n            {loading && <Loader />}\n            {error && <p>Something wrong</p>}\n        </div>\n    )\n}\n"],"names":["Reviews","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","id","includes","Number","slice","length","useEffect","fetchCasts","getReviewsById","data","results","elements","map","author","content","style","backgroundColor"],"sourceRoot":""}