{"version":3,"file":"static/js/871.c6c58379.chunk.js","mappings":"wQAKe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKF,EAAQG,SAAS,KAAOC,OAAOJ,EAAQK,MAAM,EAAGL,EAAQM,SAAWN,GAE9EO,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGAEXX,GAAW,GAFA,UAGQY,EAAAA,EAAAA,IAAeP,GAHvB,OAGLQ,EAHK,OAIXf,EAAWe,EAAKC,SAJL,gDAMXZ,EAAS,EAAD,IANG,yBAQXF,GAAW,GARA,4EAAH,qDAWhBW,GACH,GAAE,CAACN,IAEJ,IAAMU,EAAQ,OAAGlB,QAAH,IAAGA,OAAH,EAAGA,EAASmB,KAAI,YAA8B,IAA3BX,EAA0B,EAA1BA,GAAIY,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzC,OACI,2BACI,uBAAID,KACJ,uBAAIC,MAFCb,EAKhB,IAED,OACI,iBAAKc,MAAO,CAAEC,gBAAiB,eAA/B,UACKvB,IAAW,wBAAKkB,KACflB,EAAQY,SAAU,sCACnBV,IAAW,SAAC,IAAD,IACXE,IAAS,6CAGrB,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport Loader from 'shared/Loader/Loader';\r\nimport { getReviewsById } from '../../shared/api/gettingData'\r\n\r\nexport default function Reviews() {\r\n    const [reviews, setReviews] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { movieId } = useParams();\r\n    const id = movieId.includes(':') ? Number(movieId.slice(1, movieId.length)) : movieId;\r\n\r\n    useEffect(() => {\r\n        const fetchCasts = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const data = await getReviewsById(id)\r\n                setReviews(data.results)\r\n            } catch (error) {\r\n                setError(error)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchCasts();\r\n    }, [id])\r\n\r\n    const elements = reviews?.map(({ id, author, content }) => {\r\n        return (\r\n            <li key={id}>\r\n                <p>{author}</p>\r\n                <p>{content}</p>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div style={{ backgroundColor: 'lightyellow' }}>\r\n            {reviews && <ul>{elements}</ul>}\r\n            {!reviews.length && <p>No reviews</p>}\r\n            {loading && <Loader />}\r\n            {error && <p>Something wrong</p>}\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Reviews","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","id","includes","Number","slice","length","useEffect","fetchCasts","getReviewsById","data","results","elements","map","author","content","style","backgroundColor"],"sourceRoot":""}