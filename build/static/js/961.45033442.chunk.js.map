{"version":3,"file":"static/js/961.45033442.chunk.js","mappings":"iRAMe,SAASA,IAAgB,IAAD,IACnC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKF,EAAQG,SAAS,KAAOC,OAAOJ,EAAQK,MAAM,EAAGL,EAAQM,SAAWN,EACxEO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,oBAAGF,EAASG,aAAZ,aAAG,EAAgBD,YAAnB,QAA2B,WAErCE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGAEXjB,GAAW,GACXE,EAAS,MAHE,UAIQgB,EAAAA,EAAAA,IAAab,GAJrB,OAILc,EAJK,OAKXrB,EAASqB,GALE,gDAOXjB,EAAS,EAAD,IAPG,yBASXF,GAAW,GATA,4EAAH,qDAYhBiB,GACH,GAAE,CAACZ,IAIJ,GAAKR,EAAL,CAIA,IAAMuB,EAASvB,EAAMuB,OAAOC,KAAI,YAAmB,IAAhBhB,EAAe,EAAfA,GAAIiB,EAAW,EAAXA,KACnC,OACI,eAAaC,MAAO,CAAEC,YAAa,QAAnC,SAA8CF,GAArCjB,EAEhB,IAGKoB,EADab,EAASc,SAASpB,SAAS,QACnB,mBAAeD,GAAf,mBAAkCA,EAAlC,SAErBsB,EADgBf,EAASc,SAASpB,SAAS,WAChB,mBAAeD,GAAf,mBAAkCA,EAAlC,YAEjC,OACI,iCACI,4BACI,mBAAQkB,MAAO,CAAEK,aAAc,OAAQC,WAAY,QAAUC,QApB1D,kBAAMpB,EAASI,EAAf,EAoBH,qBACCf,IAAW,SAAC,IAAD,IACXE,IAAS,mDACTJ,IAAU,iCACP,iBAAK0B,MAAO,CAAEQ,QAAS,QAAvB,WACI,gBAAKR,MAAO,CAAEC,YAAa,QACvBQ,MAAM,MACNC,IAAG,0CAAqCpC,EAAK,aAC7CqC,IAAKrC,EAAMsC,SAEf,4BACI,wBAAKtC,EAAMsC,SACX,wCAAgBtC,EAAMuC,WAAtB,SACA,sCACA,uBAAIvC,EAAMwC,YACV,oCACA,eAAId,MAAO,CAAEe,UAAW,OAAQP,QAAS,QAAzC,SAAoDX,WAI5D,2BACI,yBAAI,SAAC,KAAD,CAAML,MAAO,CAAED,KAAAA,GAAQyB,GAAId,EAA3B,qBACJ,yBAAI,SAAC,KAAD,CAAMV,MAAO,CAAED,KAAAA,GAAQyB,GAAIZ,EAA3B,iCAKhB,SAAC,KAAD,MA3CP,CA8CJ,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, Outlet, useNavigate, useLocation, Link } from 'react-router-dom';\r\nimport { getMovieById } from '../../shared/api/gettingData'\r\nimport Loader from '../../shared/Loader/Loader'\r\n\r\n\r\nexport default function MovieDetails() {\r\n    const [movie, setMovie] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { movieId } = useParams();\r\n    const id = movieId.includes(':') ? Number(movieId.slice(1, movieId.length)) : movieId;\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const from = location.state?.from ?? \"/movies\";\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n                const data = await getMovieById(id);\r\n                setMovie(data);\r\n            } catch (error) {\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchMovie();\r\n    }, [id]);\r\n\r\n    const goBack = () => navigate(from);\r\n\r\n    if (!movie) {\r\n        return;\r\n    }\r\n\r\n    const genres = movie.genres.map(({ id, name }) => {\r\n        return (\r\n            <li key={id} style={{ marginRight: \"20px\" }}>{name}</li >\r\n        )\r\n    })\r\n\r\n    const isCastPage = location.pathname.includes(\"cast\");\r\n    const castLink = isCastPage ? `/movies/:${id}` : `/movies/:${id}/cast`;\r\n    const isReviewsPage = location.pathname.includes(\"reviews\");\r\n    const reviewsLink = isReviewsPage ? `/movies/:${id}` : `/movies/:${id}/reviews`;\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button style={{ marginBottom: '20px', marginLeft: '20px' }} onClick={goBack}>Go back</button>\r\n                {loading && <Loader />}\r\n                {error && <p>Something went wrong ((</p>}\r\n                {movie && (<>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <img style={{ marginRight: \"40px\" }}\r\n                            width=\"250\"\r\n                            src={`https://image.tmdb.org/t/p/w500/${movie[\"poster_path\"]}`}\r\n                            alt={movie.title}\r\n                        />\r\n                        <div>\r\n                            <h2>{movie.title}</h2>\r\n                            <p>User Score: {movie.popularity} %</p>\r\n                            <h3>Overwiew</h3>\r\n                            <p>{movie.overview}</p>\r\n                            <h3>Genres</h3>\r\n                            <ul style={{ listStyle: \"none\", display: \"flex\" }}>{genres}</ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ul>\r\n                        <li><Link state={{ from }} to={castLink}>Cast</Link></li>\r\n                        <li><Link state={{ from }} to={reviewsLink}>Reviews</Link></li>\r\n                    </ul>\r\n\r\n                </>)}\r\n            </div>\r\n            <Outlet />\r\n        </>\r\n    )\r\n}\r\n"],"names":["MovieDetails","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","id","includes","Number","slice","length","navigate","useNavigate","location","useLocation","from","state","useEffect","fetchMovie","getMovieById","data","genres","map","name","style","marginRight","castLink","pathname","reviewsLink","marginBottom","marginLeft","onClick","display","width","src","alt","title","popularity","overview","listStyle","to"],"sourceRoot":""}